// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Data.EntityModels.AccountData", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Data.EntityModels.AccountingPeriodData", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsOpen")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Month")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("Year", "Month")
                        .IsUnique();

                    b.ToTable("AccountingPeriods");
                });

            modelBuilder.Entity("Data.EntityModels.TransactionData", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("AccountingDate")
                        .HasColumnType("TEXT");

                    b.Property<long?>("CreditDetailPrimaryKey")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("DebitDetailPrimaryKey")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("Id")
                        .HasColumnType("TEXT");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("CreditDetailPrimaryKey");

                    b.HasIndex("DebitDetailPrimaryKey");

                    b.HasIndex("Id");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Data.ValueObjectModels.AccountingEntryData", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<long?>("TransactionDataPrimaryKey")
                        .HasColumnType("INTEGER");

                    b.HasKey("PrimaryKey");

                    b.HasIndex("TransactionDataPrimaryKey");

                    b.ToTable("AccountingEntries");
                });

            modelBuilder.Entity("Data.ValueObjectModels.TransactionDetailData", b =>
                {
                    b.Property<long>("PrimaryKey")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("StatementDate")
                        .HasColumnType("TEXT");

                    b.HasKey("PrimaryKey");

                    b.ToTable("TransactionDetails");
                });

            modelBuilder.Entity("Data.EntityModels.TransactionData", b =>
                {
                    b.HasOne("Data.ValueObjectModels.TransactionDetailData", "CreditDetail")
                        .WithMany()
                        .HasForeignKey("CreditDetailPrimaryKey");

                    b.HasOne("Data.ValueObjectModels.TransactionDetailData", "DebitDetail")
                        .WithMany()
                        .HasForeignKey("DebitDetailPrimaryKey");

                    b.Navigation("CreditDetail");

                    b.Navigation("DebitDetail");
                });

            modelBuilder.Entity("Data.ValueObjectModels.AccountingEntryData", b =>
                {
                    b.HasOne("Data.EntityModels.TransactionData", null)
                        .WithMany("AccountingEntries")
                        .HasForeignKey("TransactionDataPrimaryKey");
                });

            modelBuilder.Entity("Data.EntityModels.TransactionData", b =>
                {
                    b.Navigation("AccountingEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
